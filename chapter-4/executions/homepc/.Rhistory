c_with_branching_dataset_1 <- read.csv("~/code/github/jonnyguio/tcc/chapter-4/executions/c-with-branching/execution-1-5000.csv")
View(c_with_branching_dataset_1)
c_with_branching_dataset_2 <- read.csv("~/code/github/jonnyguio/tcc/chapter-4/executions/c-with-branching/execution-2-5000.csv")
View(c_with_branching_dataset_2)
c_with_branching_dataset_4 <- read.csv("~/code/github/jonnyguio/tcc/chapter-4/executions/c-with-branching/execution-4-5000.csv")
View(c_with_branching_dataset_4)
ggplot(mapping = aes()) +
geom_smooth(aes(x = c_with_branching_dataset_1$sample_number,
y = c_with_branching_dataset_1$time,
colour = factor(c_with_branching_dataset_1$cores)),
c_with_branching_dataset_1,
fill = colours_cores[1]) +
geom_smooth(aes(x = c_with_branching_dataset_2$sample_number,
y = c_with_branching_dataset_2$time,
colour = factor(c_with_branching_dataset_2$cores)),
c_with_branching_dataset_2,
fill = colours_cores[2]) +
geom_smooth(aes(x = c_with_branching_dataset_4$sample_number,
y = c_with_branching_dataset_4$time,
colour = factor(c_with_branching_dataset_4$cores)),
c_with_branching_dataset_4,
fill = colours_cores[3]) +
scale_color_manual(values = colours_cores) +
labs(x = "Amostra", y = "Tempo (s)", colour = "Núcleos", title = "C - Matriz 5000x5000")
library(ggplot2)
colours_cores <- c("#990000", "#274e13", "#073763")
substr(colours_cores, 1, 7)
colours_cores[1]
ggplot(mapping = aes()) +
geom_smooth(aes(x = c_with_branching_dataset_1$sample_number,
y = c_with_branching_dataset_1$time,
colour = factor(c_with_branching_dataset_1$cores)),
c_with_branching_dataset_1,
fill = colours_cores[1]) +
geom_smooth(aes(x = c_with_branching_dataset_2$sample_number,
y = c_with_branching_dataset_2$time,
colour = factor(c_with_branching_dataset_2$cores)),
c_with_branching_dataset_2,
fill = colours_cores[2]) +
geom_smooth(aes(x = c_with_branching_dataset_4$sample_number,
y = c_with_branching_dataset_4$time,
colour = factor(c_with_branching_dataset_4$cores)),
c_with_branching_dataset_4,
fill = colours_cores[3]) +
scale_color_manual(values = colours_cores) +
labs(x = "Amostra", y = "Tempo (s)", colour = "Núcleos", title = "C - Matriz 5000x5000")
library(ggplot2)
library(plyr)
library(dplyr)
library(gmodels)
set
setwd('/home/jone/code/github/jonnyguio/tcc/chapter-4/executions/homepc')
temp = list.files(path = "./go-with-branching/", pattern = "*.csv.fix", full.names = TRUE)
go_with_branching_dataset = lapply(temp, read.delim, sep = ",")
go_with_branching_merged_dataset = rbind.fill(go_with_branching_dataset)
View(go_with_branching_merged_dataset)
temp = list.files(path = "./c-with-branching/", pattern = "*.csv", full.names = TRUE)
c_with_branching_dataset = lapply(temp, read.delim, sep = ",")
c_with_branching_merged_dataset = rbind.fill(c_with_branching_dataset)
View(c_with_branching_merged_dataset)
colours_cores <- c("#990000", "#274e13", "#073763")
substr(colours_cores, 1, 7)
colours_cores[1]
standard_error <- function(x) sd(x)/sqrt(length(x))
go_no_branching_summary <- go_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
c_with_branching_summary <- c_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
substr(colours_cores, 1, 7)
colours_cores[1]
standard_error <- function(x) sd(x)/sqrt(length(x))
if (FALSE) {
go_no_branching_summary <- go_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
IF (FALSE) {
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
IF (FALSE) {
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
if (FALSE) {
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
c_with_branching_summary <- c_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
c_go_with_branching_comparison = rbind(c_with_branching_summary, go_with_branching_summary)
c_go_with_branching_comparison$lang = ""
c_go_with_branching_comparison$lang[1:18] = "C++"
c_go_with_branching_comparison$lang[19:36] = "Go"
c_go_with_branching_comparison = c_go_with_branching_comparison[c_go_with_branching_comparison$cores == 4,]
ggplot(mapping = aes(x = go_no_branching_summary$matrix_size,
y = go_no_branching_summary$mean_time,
colour = factor(go_no_branching_summary$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=go_no_branching_summary$min_time, ymax=go_no_branching_summary$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
c_go_with_branching_comparison = rbind(c_with_branching_summary, go_with_branching_summary)
c_go_with_branching_comparison$lang = ""
c_go_with_branching_comparison$lang[1:18] = "C++"
c_go_with_branching_comparison$lang[19:36] = "Go"
c_go_with_branching_comparison = c_go_with_branching_comparison[c_go_with_branching_comparison$cores == 4,]
c_go_with_branching_comparison = rbind(c_with_branching_summary, go_with_branching_summary)
c_go_with_branching_comparison$lang = ""
c_go_with_branching_comparison$lang[1:18] = "C++"
c_go_with_branching_comparison$lang[19:36] = "Go"
View(c_go_with_branching_comparison)
substr(colours_cores, 1, 7)
colours_cores[1]
standard_error <- function(x) sd(x)/sqrt(length(x))
if (FALSE) {
go_no_branching_summary <- go_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
View(c_with_branching_summary)
if (FALSE) {
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
c_with_branching_summary <- c_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
View(go_with_branching_summary)
c_go_with_branching_comparison = rbind(c_with_branching_summary, go_with_branching_summary)
c_go_with_branching_comparison$lang = ""
c_go_with_branching_comparison$lang[1:18] = "C++"
c_go_with_branching_comparison
View(c_go_with_branching_comparison)
View(go_with_branching_merged_dataset)
View(go_with_branching_summary)
View(go_with_branching_summary)
View(go_with_branching_merged_dataset)
View(go_with_branching_dataset)
library(ggplot2)
library(plyr)
library(dplyr)
library(gmodels)
temp = list.files(path = "./go-with-branching/", pattern = "*.csv.fix", full.names = TRUE)
go_with_branching_dataset = lapply(temp, read.delim, sep = ",")
go_with_branching_merged_dataset = rbind.fill(go_with_branching_dataset)
temp = list.files(path = "./c-with-branching/", pattern = "*.csv", full.names = TRUE)
c_with_branching_dataset = lapply(temp, read.delim, sep = ",")
c_with_branching_merged_dataset = rbind.fill(c_with_branching_dataset)
colours_cores <- c("#990000", "#274e13", "#073763")
substr(colours_cores, 1, 7)
colours_cores[1]
standard_error <- function(x) sd(x)/sqrt(length(x))
if (FALSE) {
go_no_branching_summary <- go_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
go_with_branching_summary <- go_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
if (FALSE) {
c_no_branching_summary <- c_no_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
}
c_with_branching_summary <- c_with_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
c_go_with_branching_comparison = rbind(c_with_branching_summary, go_with_branching_summary)
c_go_with_branching_comparison$lang = ""
c_go_with_branching_comparison$lang[1:18] = "C++"
c_go_with_branching_comparison$lang[19:36] = "Go"
c_go_with_branching_comparison = c_go_with_branching_comparison[c_go_with_branching_comparison$cores == 4,]
if (FALSE) {
ggplot(mapping = aes(x = go_no_branching_summary$matrix_size,
y = go_no_branching_summary$mean_time,
colour = factor(go_no_branching_summary$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=go_no_branching_summary$min_time, ymax=go_no_branching_summary$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
}
current_dataset <- go_with_branching_summary
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = factor(current_dataset$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
if (FALSE) {
current_dataset <- c_no_branching_summary
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = factor(current_dataset$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
}
current_dataset <- c_with_branching_summary
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = factor(current_dataset$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
# Comparacões
if (FALSE) {
current_dataset <- c_go_no_branching_comparison
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = current_dataset$lang)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Linguagem")
}
current_dataset <- c_go_with_branching_comparison
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = current_dataset$lang)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Linguagem")
temp = list.files(path = "./go-cpp-algorithm/", pattern = "*.csv.fix", full.names = TRUE)
go_cpp_branching_dataset = lapply(temp, read.delim, sep = ",")
go_cpp_branching_merged_dataset = rbind.fill(go_cpp_branching_dataset)
colours_cores <- c("#990000", "#274e13", "#073763")
go_cpp_branching_summary <- go_cpp_branching_merged_dataset %>%
group_by(cores, matrix_size) %>%
summarise(mean_time=mean(time), sd_time=sd(time), cv=(sd(time) / mean(time))*100, std_err=standard_error(time), min_time=min(time), max_time=max(time))
View(go_cpp_branching_summary)
c_go_same_algorithm_comparison = rbind(c_with_branching_summary, go_cpp_branching_summary)
c_go_same_algorithm_comparison$lang = ""
c_go_same_algorithm_comparison$lang[1:18] = "C++"
c_go_same_algorithm_comparison$lang[19:36] = "Go"
c_go_same_algorithm_comparison = c_go_same_algorithm[c_go_same_algorithm$cores == 4,]
c_go_same_algorithm_comparison = c_go_same_algorithm_comparison[c_go_same_algorithm_comparison$cores == 4,]
c_go_same_algorithm_comparison = rbind(c_with_branching_summary, go_cpp_branching_summary)
c_go_same_algorithm_comparison$lang = ""
c_go_same_algorithm_comparison$lang[1:18] = "C++"
c_go_same_algorithm_comparison$lang[19:36] = "Go"
c_go_same_algorithm_comparison = c_go_same_algorithm_comparison[c_go_same_algorithm_comparison$cores == 4,]
if (FALSE) {
ggplot(mapping = aes(x = go_no_branching_summary$matrix_size,
y = go_no_branching_summary$mean_time,
colour = factor(go_no_branching_summary$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=go_no_branching_summary$min_time, ymax=go_no_branching_summary$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
}
current_dataset <- go_cpp_branching_summary
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = factor(current_dataset$cores))) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Núcleos")
current_dataset <- c_go_same_algorithm_comparison
ggplot(mapping = aes(x = current_dataset$matrix_size,
y = current_dataset$mean_time,
colour = current_dataset$lang)) +
geom_point() +
geom_line() +
geom_errorbar(aes(ymin=current_dataset$min_time, ymax=current_dataset$max_time), width = 100) +
scale_color_manual(values = colours_cores) +
labs(x = "Tamanho da Matriz", y = "Tempo (s)", colour = "Linguagem")
